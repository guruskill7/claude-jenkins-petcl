import { RenderOptions, TemplateResult } from 'lit';
import { DirectiveResult } from 'lit/directive.js';
import { NotificationElement } from '@vaadin/vaadin-notification';
import { AbstractRendererDirective } from './abstract-renderer.js';
export declare type NotificationLitRenderer = (notification: NotificationElement) => TemplateResult;
declare class NotificationRendererDirective extends AbstractRendererDirective<NotificationElement, NotificationLitRenderer> {
    /**
     * Set renderer callback to the element.
     */
    addRenderer(element: NotificationElement, renderer: NotificationLitRenderer, options: RenderOptions): void;
    /**
     * Run renderer callback on the element.
     */
    runRenderer(element: NotificationElement): void;
}
export declare const notificationRenderer: (renderer: NotificationLitRenderer, value?: unknown) => DirectiveResult<typeof NotificationRendererDirective>;
export {};
//# sourceMappingURL=notification-renderer.d.ts.map