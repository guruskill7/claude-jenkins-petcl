import { RenderOptions, TemplateResult } from 'lit';
import { DirectiveResult } from 'lit/directive.js';
import { GridElement, GridItemModel } from '@vaadin/vaadin-grid';
import { AbstractRendererDirective } from './abstract-renderer.js';
export declare type GridRowDetailsLitRenderer<T> = (item: T, model: GridItemModel<T>, grid: GridElement) => TemplateResult;
declare class GridRowDetailsRendererDirective extends AbstractRendererDirective<GridElement, GridRowDetailsLitRenderer<unknown>> {
    /**
     * Set renderer callback to the element.
     */
    addRenderer<T>(element: GridElement, renderer: GridRowDetailsLitRenderer<T>, options: RenderOptions): void;
    /**
     * Run renderer callback on the element.
     */
    runRenderer(element: GridElement): void;
}
export declare const gridRowDetailsRenderer: <T>(renderer: GridRowDetailsLitRenderer<T>, value?: unknown) => DirectiveResult<typeof GridRowDetailsRendererDirective>;
export {};
//# sourceMappingURL=grid-row-details-renderer.d.ts.map