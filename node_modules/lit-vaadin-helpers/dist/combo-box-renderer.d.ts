import { RenderOptions, TemplateResult } from 'lit';
import { DirectiveResult } from 'lit/directive.js';
import { ComboBoxElement, ComboBoxItemModel } from '@vaadin/vaadin-combo-box';
import { AbstractRendererDirective } from './abstract-renderer.js';
export declare type ComboBoxLitRenderer<T> = (item: T, model: ComboBoxItemModel<T>, comboBox: ComboBoxElement) => TemplateResult;
declare class ComboBoxRendererDirective extends AbstractRendererDirective<ComboBoxElement, ComboBoxLitRenderer<unknown>> {
    /**
     * Set renderer callback to the element.
     */
    addRenderer<T>(element: ComboBoxElement, renderer: ComboBoxLitRenderer<T>, options: RenderOptions): void;
    /**
     * Run renderer callback on the element.
     */
    runRenderer(element: ComboBoxElement): void;
}
export declare const comboBoxRenderer: <T>(renderer: ComboBoxLitRenderer<T>, value?: unknown) => DirectiveResult<typeof ComboBoxRendererDirective>;
export {};
//# sourceMappingURL=combo-box-renderer.d.ts.map