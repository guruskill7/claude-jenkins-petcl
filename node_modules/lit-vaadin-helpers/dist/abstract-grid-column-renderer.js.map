{"version":3,"file":"abstract-grid-column-renderer.js","sourceRoot":"","sources":["../src/abstract-grid-column-renderer.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,yBAAyB,EAAuB,MAAM,wBAAwB,CAAC;AACxF,OAAO,EAAE,QAAQ,EAAE,MAAM,YAAY,CAAC;AAEtC,MAAM,OAAgB,0BAGpB,SAAQ,yBAA+B;IACvC;;OAEG;IACH,WAAW,CAAC,OAA0B;QACpC,MAAM,IAAI,GAAG,OAAO,CAAC,KAAK,CAAC;QAC3B,IAAI,IAAI,EAAE;YACR,iEAAiE;YACjE,gEAAgE;YAChE,QAAQ,CAAC,IAAI,EAAE,GAAG,EAAE;gBAClB,IAAI,CAAC,oBAAoB,EAAE,CAAC;YAC9B,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;CACF","sourcesContent":["import { GridColumnElement } from '@vaadin/vaadin-grid';\nimport { AbstractRendererDirective, AbstractLitRenderer } from './abstract-renderer.js';\nimport { debounce } from './utils.js';\n\nexport abstract class AbstractGridColumnRenderer<\n  T extends GridColumnElement,\n  R extends AbstractLitRenderer\n> extends AbstractRendererDirective<T, R> {\n  /**\n   * Run renderer callback on the element.\n   */\n  runRenderer(element: GridColumnElement): void {\n    const grid = element._grid;\n    if (grid) {\n      // Only call grid.requestContentUpdate() once per property change\n      // in case if that property is used by several column renderers.\n      debounce(grid, () => {\n        grid.requestContentUpdate();\n      });\n    }\n  }\n}\n"]}