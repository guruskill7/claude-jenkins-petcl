{"version":3,"file":"context-menu-renderer.js","sourceRoot":"","sources":["../src/context-menu-renderer.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAiC,MAAM,KAAK,CAAC;AAC5D,OAAO,EAAE,SAAS,EAAmB,MAAM,kBAAkB,CAAC;AAE9D,OAAO,EAAE,yBAAyB,EAAE,MAAM,wBAAwB,CAAC;AAOnE,MAAM,4BAA6B,SAAQ,yBAG1C;IACC;;OAEG;IACH,WAAW,CACT,OAA2B,EAC3B,QAAgC,EAChC,OAAsB;QAEtB,OAAO,CAAC,QAAQ,GAAG,CACjB,IAAiB,EACjB,IAAyB,EACzB,OAAoC,EACpC,EAAE;YACF,MAAM,CACJ,QAAQ,CAAC,IAAI,CACX,OAAO,CAAC,IAAI,EACZ,OAAqC,EACrC,IAA0B,CAC3B,EACD,IAAI,EACJ,OAAO,CACR,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;IAED;;OAEG;IACH,WAAW,CAAC,OAA2B;QACrC,OAAO,CAAC,oBAAoB,EAAE,CAAC;IACjC,CAAC;CACF;AAED,MAAM,iBAAiB,GAAG,SAAS,CAAC,4BAA4B,CAAC,CAAC;AAElE,MAAM,CAAC,MAAM,mBAAmB,GAAG,CACjC,QAAgC,EAChC,KAAe,EACuC,EAAE,CAAC,iBAAiB,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC","sourcesContent":["import { render, RenderOptions, TemplateResult } from 'lit';\nimport { directive, DirectiveResult } from 'lit/directive.js';\nimport { ContextMenuElement, ContextMenuRendererContext } from '@vaadin/vaadin-context-menu';\nimport { AbstractRendererDirective } from './abstract-renderer.js';\n\nexport type ContextMenuLitRenderer = (\n  context: ContextMenuRendererContext,\n  menu: ContextMenuElement\n) => TemplateResult;\n\nclass ContextMenuRendererDirective extends AbstractRendererDirective<\n  ContextMenuElement,\n  ContextMenuLitRenderer\n> {\n  /**\n   * Set renderer callback to the element.\n   */\n  addRenderer(\n    element: ContextMenuElement,\n    renderer: ContextMenuLitRenderer,\n    options: RenderOptions\n  ) {\n    element.renderer = (\n      root: HTMLElement,\n      menu?: ContextMenuElement,\n      context?: ContextMenuRendererContext\n    ) => {\n      render(\n        renderer.call(\n          options.host,\n          context as ContextMenuRendererContext,\n          menu as ContextMenuElement\n        ),\n        root,\n        options\n      );\n    };\n  }\n\n  /**\n   * Run renderer callback on the element.\n   */\n  runRenderer(element: ContextMenuElement) {\n    element.requestContentUpdate();\n  }\n}\n\nconst rendererDirective = directive(ContextMenuRendererDirective);\n\nexport const contextMenuRenderer = (\n  renderer: ContextMenuLitRenderer,\n  value?: unknown\n): DirectiveResult<typeof ContextMenuRendererDirective> => rendererDirective(renderer, value);\n"]}