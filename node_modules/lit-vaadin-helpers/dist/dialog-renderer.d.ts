import { RenderOptions, TemplateResult } from 'lit';
import { DirectiveResult } from 'lit/directive.js';
import { DialogElement } from '@vaadin/vaadin-dialog';
import { AbstractRendererDirective } from './abstract-renderer.js';
export declare type DialogLitRenderer = (dialog: DialogElement) => TemplateResult;
declare class DialogRendererDirective extends AbstractRendererDirective<DialogElement, DialogLitRenderer> {
    /**
     * Set renderer callback to the element.
     */
    addRenderer(element: DialogElement, renderer: DialogLitRenderer, options: RenderOptions): void;
    /**
     * Run renderer callback on the element.
     */
    runRenderer(element: DialogElement): void;
}
export declare const dialogRenderer: (renderer: DialogLitRenderer, value?: unknown) => DirectiveResult<typeof DialogRendererDirective>;
export {};
//# sourceMappingURL=dialog-renderer.d.ts.map