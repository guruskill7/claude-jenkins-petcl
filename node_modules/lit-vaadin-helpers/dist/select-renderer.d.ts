import { RenderOptions, TemplateResult } from 'lit';
import { DirectiveResult } from 'lit/directive.js';
import { SelectElement } from '@vaadin/vaadin-select';
import { AbstractRendererDirective } from './abstract-renderer.js';
export declare type SelectLitRenderer = (select: SelectElement) => TemplateResult;
declare class SelectRendererDirective extends AbstractRendererDirective<SelectElement, SelectLitRenderer> {
    /**
     * Set renderer callback to the element.
     */
    addRenderer(element: SelectElement, renderer: SelectLitRenderer, options: RenderOptions): void;
    /**
     * Run renderer callback on the element.
     */
    runRenderer(element: SelectElement): void;
}
export declare const selectRenderer: (renderer: SelectLitRenderer, value?: unknown) => DirectiveResult<typeof SelectRendererDirective>;
export {};
//# sourceMappingURL=select-renderer.d.ts.map