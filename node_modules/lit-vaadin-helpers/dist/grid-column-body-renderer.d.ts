import { RenderOptions, TemplateResult } from 'lit';
import { DirectiveResult } from 'lit/directive.js';
import { GridColumnElement, GridItemModel } from '@vaadin/vaadin-grid';
import { AbstractGridColumnRenderer } from './abstract-grid-column-renderer.js';
export declare type GridColumnBodyLitRenderer<T> = (item: T, model: GridItemModel<T>, column: GridColumnElement<T>) => TemplateResult;
declare class GridColumnBodyRendererDirective extends AbstractGridColumnRenderer<GridColumnElement, GridColumnBodyLitRenderer<unknown>> {
    /**
     * Set renderer callback to the element.
     */
    addRenderer<T>(element: GridColumnElement, renderer: GridColumnBodyLitRenderer<T>, options: RenderOptions): void;
}
export declare const columnBodyRenderer: <T>(renderer: GridColumnBodyLitRenderer<T>, value?: unknown) => DirectiveResult<typeof GridColumnBodyRendererDirective>;
export {};
//# sourceMappingURL=grid-column-body-renderer.d.ts.map