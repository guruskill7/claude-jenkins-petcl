import { RenderOptions, TemplateResult } from 'lit';
import { DirectiveResult } from 'lit/directive.js';
import { ContextMenuElement, ContextMenuRendererContext } from '@vaadin/vaadin-context-menu';
import { AbstractRendererDirective } from './abstract-renderer.js';
export declare type ContextMenuLitRenderer = (context: ContextMenuRendererContext, menu: ContextMenuElement) => TemplateResult;
declare class ContextMenuRendererDirective extends AbstractRendererDirective<ContextMenuElement, ContextMenuLitRenderer> {
    /**
     * Set renderer callback to the element.
     */
    addRenderer(element: ContextMenuElement, renderer: ContextMenuLitRenderer, options: RenderOptions): void;
    /**
     * Run renderer callback on the element.
     */
    runRenderer(element: ContextMenuElement): void;
}
export declare const contextMenuRenderer: (renderer: ContextMenuLitRenderer, value?: unknown) => DirectiveResult<typeof ContextMenuRendererDirective>;
export {};
//# sourceMappingURL=context-menu-renderer.d.ts.map